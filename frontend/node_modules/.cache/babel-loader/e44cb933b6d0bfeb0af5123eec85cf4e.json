{"ast":null,"code":"var _jsxFileName = \"/Users/ayo/code/practice/useTwelve/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [emails, setEmails] = useState([]);\n  const [selectedEmail, setSelectedEmail] = useState(null);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  useEffect(() => {\n    fetchEmails();\n  }, []);\n  const fetchEmails = () => {\n    axios.get(\"/api/emails\").then(res => {\n      setEmails(res.data);\n    });\n  };\n  const handleDeleteEmail = id => {\n    axios.delete(`/api/emails/${id}`).then(() => {\n      toast.success(\"Email deleted successfully\");\n      fetchEmails();\n    });\n  };\n  const handleUpdateEmail = () => {\n    if (selectedEmail) {\n      axios.put(`/api/emails/${selectedEmail.id}`, selectedEmail).then(() => {\n        toast.success(\"Email updated successfully\");\n        fetchEmails();\n        setModalIsOpen(false);\n      });\n    }\n  };\n  const openModal = email => {\n    setSelectedEmail(email);\n    setModalIsOpen(true);\n  };\n  const closeModal = () => {\n    setModalIsOpen(false);\n    setSelectedEmail(null);\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setSelectedEmail(prevEmail => {\n      if (prevEmail) {\n        return {\n          ...prevEmail,\n          [name]: name === \"amount\" ? parseFloat(value) : value\n        };\n      }\n      return prevEmail;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Email Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Comments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: emails.map(email => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: email.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: email.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: email.comments\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)]\n        }, email.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add New Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name\",\n        value: newEmail.name,\n        onChange: e => setNewEmail({\n          ...newEmail,\n          name: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Amount\",\n        value: newEmail.amount,\n        onChange: e => setNewEmail({\n          ...newEmail,\n          amount: parseFloat(e.target.value)\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Comments\",\n        value: newEmail.comments,\n        onChange: e => setNewEmail({\n          ...newEmail,\n          comments: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddEmail,\n        children: \"Add Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"FM5QK1B+jftna+QAEowylI3LCsY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","toast","jsxDEV","_jsxDEV","App","_s","emails","setEmails","selectedEmail","setSelectedEmail","modalIsOpen","setModalIsOpen","fetchEmails","get","then","res","data","handleDeleteEmail","id","delete","success","handleUpdateEmail","put","openModal","email","closeModal","handleInputChange","e","name","value","target","prevEmail","parseFloat","children","fileName","_jsxFileName","lineNumber","columnNumber","map","amount","comments","type","placeholder","newEmail","onChange","setNewEmail","onClick","handleAddEmail","_c","$RefreshReg$"],"sources":["/Users/ayo/code/practice/useTwelve/frontend/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Modal from \"react-modal\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\ntype Email = {\n  id: number;\n  name: string;\n  amount: number;\n  comments: string;\n};\n\nconst App: React.FC = () => {\n  const [emails, setEmails] = useState<Email[]>([]);\n  const [selectedEmail, setSelectedEmail] = useState<Email | null>(null);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  useEffect(() => {\n    fetchEmails();\n  }, []);\n\n  const fetchEmails = () => {\n    axios.get(\"/api/emails\").then((res) => {\n      setEmails(res.data);\n    });\n  };\n\n  const handleDeleteEmail = (id: number) => {\n    axios.delete(`/api/emails/${id}`).then(() => {\n      toast.success(\"Email deleted successfully\");\n      fetchEmails();\n    });\n  };\n  const handleUpdateEmail = () => {\n    if (selectedEmail) {\n      axios.put(`/api/emails/${selectedEmail.id}`, selectedEmail).then(() => {\n        toast.success(\"Email updated successfully\");\n        fetchEmails();\n        setModalIsOpen(false);\n      });\n    }\n  };\n\n  const openModal = (email: Email) => {\n    setSelectedEmail(email);\n    setModalIsOpen(true);\n  };\n  const closeModal = () => {\n    setModalIsOpen(false);\n    setSelectedEmail(null);\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setSelectedEmail((prevEmail) => {\n      if (prevEmail) {\n        return {\n          ...prevEmail,\n          [name]: name === \"amount\" ? parseFloat(value) : value,\n        };\n      }\n      return prevEmail;\n    });\n  };\n\n  return (\n    <div>\n      <h1>Email Data</h1>\n      <table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Amount</th>\n            <th>Comments</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {emails.map((email) => (\n            <tr key={email.id}>\n              <td>{email.name}</td>\n              <td>{email.amount}</td>\n              <td>{email.comments}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <div>\n        <h2>Add New Email</h2>\n        <input\n          type=\"text\"\n          placeholder=\"Name\"\n          value={newEmail.name}\n          onChange={(e) => setNewEmail({ ...newEmail, name: e.target.value })}\n        />\n        <input\n          type=\"number\"\n          placeholder=\"Amount\"\n          value={newEmail.amount}\n          onChange={(e) =>\n            setNewEmail({ ...newEmail, amount: parseFloat(e.target.value) })\n          }\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Comments\"\n          value={newEmail.comments}\n          onChange={(e) =>\n            setNewEmail({ ...newEmail, comments: e.target.value })\n          }\n        />\n        <button onClick={handleAddEmail}>Add Email</button>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}