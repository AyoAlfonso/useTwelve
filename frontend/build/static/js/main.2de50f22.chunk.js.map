{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","emails","setEmails","useState","selectedEmail","setSelectedEmail","modalIsOpen","setModalIsOpen","sortOrder","setSortOrder","useEffect","fetchEmails","axios","get","then","res","data","handleInputChange","e","name","value","target","prevEmail","parseFloat","_jsxs","children","_jsx","onClick","handleSortByAmount","newOrder","sortedEmails","sort","a","b","amount","style","cursor","length","map","email","comments","display","gap","openModal","handleDeleteEmail","id","delete","concat","toast","success","colSpan","Modal","isOpen","onRequestClose","closeModal","contentLabel","type","onChange","handleUpdateEmail","put","ToastContainer","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2de50f22.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Modal from \"react-modal\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\ntype Email = {\n  id: number;\n  name: string;\n  amount: number;\n  comments: string;\n};\n\ntype SortOrder = \"asc\" | \"desc\";\n\nconst App: React.FC = () => {\n  const [emails, setEmails] = useState<Email[]>([]);\n  const [selectedEmail, setSelectedEmail] = useState<Email | null>(null);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [sortOrder, setSortOrder] = useState<SortOrder>(\"asc\");\n\n  useEffect(() => {\n    fetchEmails();\n  }, []);\n\n  const fetchEmails = () => {\n    axios.get(\"/api/emails\").then((res) => {\n      setEmails(res.data);\n    });\n  };\n\n  const handleDeleteEmail = (id: number) => {\n    axios.delete(`/api/emails/${id}`).then(() => {\n      toast.success(\"Email msg deleted successfully\");\n      fetchEmails();\n    });\n  };\n\n  const handleUpdateEmail = () => {\n    if (selectedEmail) {\n      axios.put(`/api/emails/${selectedEmail.id}`, selectedEmail).then(() => {\n        toast.success(\"Email msg updated successfully\");\n        fetchEmails();\n        setModalIsOpen(false);\n      });\n    }\n  };\n\n  const openModal = (email: Email) => {\n    setSelectedEmail(email);\n    setModalIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setModalIsOpen(false);\n    setSelectedEmail(null);\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setSelectedEmail((prevEmail) => {\n      if (prevEmail) {\n        return {\n          ...prevEmail,\n          [name]: name === \"amount\" ? parseFloat(value) : value,\n        };\n      }\n      return prevEmail;\n    });\n  };\n\n  const handleSortByAmount = () => {\n    const newOrder: SortOrder = sortOrder === \"asc\" ? \"desc\" : \"asc\";\n    setSortOrder(newOrder);\n    const sortedEmails = [...emails].sort((a, b) => {\n      if (a.amount < b.amount) return newOrder === \"asc\" ? -1 : 1;\n      if (a.amount > b.amount) return newOrder === \"asc\" ? 1 : -1;\n      return 0;\n    });\n    setEmails(sortedEmails);\n  };\n\n  return (\n    <div>\n      <h1>Email Data</h1>\n      <table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th onClick={handleSortByAmount} style={{ cursor: \"pointer\" }}>\n              Amount {sortOrder === \"asc\" ? \"↑\" : \"↓\"}\n            </th>\n            <th>Comments</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {emails.length > 0 ? (\n            emails.map((email) => (\n              <tr key={email.id}>\n                <td>{email.name}</td>\n                <td>{email.amount}</td>\n                <td>{email.comments}</td>\n                <td>\n                  <div style={{ display: \"flex\", gap: \"10px\" }}>\n                    <button onClick={() => openModal(email)}>Edit</button>\n                    <button onClick={() => handleDeleteEmail(email.id)}>\n                      Delete\n                    </button>\n                  </div>\n                </td>\n              </tr>\n            ))\n          ) : (\n            <tr>\n              <td colSpan={4}>No Emails Found</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        contentLabel=\"Edit Email\"\n      >\n        {selectedEmail && (\n          <div>\n            <h2>Edit Email</h2>\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={selectedEmail.name}\n              onChange={handleInputChange}\n            />\n            <input\n              type=\"number\"\n              name=\"amount\"\n              value={selectedEmail.amount}\n              onChange={handleInputChange}\n            />\n            <input\n              type=\"text\"\n              name=\"comments\"\n              value={selectedEmail.comments}\n              onChange={handleInputChange}\n            />\n            <button onClick={handleUpdateEmail}>Update Email</button>\n          </div>\n        )}\n      </Modal>\n      <ToastContainer />\n      <div>\n        <h2>\n          Example of an email to send to alfonsoayo7@gmail.com\n          <br /> Put the content below in the body of the message\n        </h2>\n      </div>\n      <div>\n        name: John Doe <br />\n        Amount: 363.45 <br />\n        Comment: This is a test comment <br />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}